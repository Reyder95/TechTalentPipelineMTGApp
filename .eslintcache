[{"C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\index.js":"1","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\App.js":"2","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\reportWebVitals.js":"3","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\components\\RandomCard.js":"4","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\redux\\reducers\\index.js":"5","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\redux\\reducers\\actionTypes.js":"6","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\redux\\store.js":"7","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\components\\SearchCard.js":"8","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\components\\MtgCard.js":"9"},{"size":622,"mtime":1610573079144,"results":"10","hashOfConfig":"11"},{"size":599,"mtime":1610576385704,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1245,"mtime":1610573915771,"results":"14","hashOfConfig":"11"},{"size":1491,"mtime":1610575261836,"results":"15","hashOfConfig":"11"},{"size":106,"mtime":1610572165200,"results":"16","hashOfConfig":"11"},{"size":281,"mtime":1610572117694,"results":"17","hashOfConfig":"11"},{"size":1524,"mtime":1610576119507,"results":"18","hashOfConfig":"11"},{"size":342,"mtime":1610574907704,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"m4adx6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\index.js",[],["42","43"],"C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\App.js",["44"],"C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\reportWebVitals.js",[],"C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\components\\RandomCard.js",["45","46"],"import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getRandomCard } from '../redux/reducers';\r\n\r\nclass IsLoading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Loading!</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass RandomCard extends Component {\r\n\r\n    async componentDidMount() {\r\n        await this.fetchRandomCard();\r\n    }\r\n\r\n    async fetchRandomCard(e) {\r\n        await this.props.getRandomCard();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            this.props.randomCard.image_uris != undefined ? (\r\n            <div>\r\n                <button onClick={(e) => this.fetchRandomCard()}>Random Card</button>\r\n                <p>{this.props.randomCard.name}</p>\r\n                <img src={this.props.randomCard.image_uris.large} width=\"200px\"/>\r\n            </div>\r\n            )\r\n            :\r\n            <IsLoading/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        randomCard: state.randomCard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getRandomCard: () => dispatch(getRandomCard())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomCard);","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\redux\\reducers\\actionTypes.js",[],"C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\redux\\store.js",[],"C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\components\\SearchCard.js",["47"],"import React, { Component } from 'react';\r\n\r\nimport MtgCard from './MtgCard';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getSearchedCards } from '../redux/reducers'\r\n\r\nclass IsLoading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Loading!</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SearchCard extends Component {\r\n\r\n    state = {\r\n        searchString: '',\r\n        isLoading: true\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            searchString: e.target.value\r\n        })\r\n    }\r\n\r\n    async fetchResults() {\r\n\r\n        await this.props.getSearchedCards(this.state.searchString)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input onChange={(e) => this.handleChange(e)} type=\"text\" placeholder=\"Search for MTG Card\"/>\r\n                <button onClick={() => this.fetchResults()}>Submit</button>\r\n                <MtgCard\r\n                id=\"1\"\r\n                name=\"mtgcard\"\r\n                image=\"https://c1.scryfall.com/file/scryfall-cards/large/front/9/a/9a4f5b00-ac50-485f-a38a-b9f409307d5c.jpg?1562032865\"\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cardList: state.cardList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getSearchedCards: (searchString) => dispatch(getSearchedCards(searchString))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchCard);","C:\\Users\\Scarlet Red\\Documents\\Programming\\TTP Stuff\\ttp-mtg\\src\\components\\MtgCard.js",["48"],"import React, { Component } from 'react';\r\n\r\nclass MtgCard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{this.props.id}</p>\r\n                <p>{this.props.name}</p>\r\n                <img src={this.props.image} width=\"150px\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MtgCard;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"58","line":29,"column":46,"nodeType":"59","messageId":"60","endLine":29,"endColumn":48},{"ruleId":"61","severity":1,"message":"62","line":33,"column":17,"nodeType":"63","endLine":33,"endColumn":82},{"ruleId":"53","severity":1,"message":"64","line":8,"column":7,"nodeType":"55","messageId":"56","endLine":8,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":9,"column":17,"nodeType":"63","endLine":9,"endColumn":60},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IsLoading' is defined but never used.","no-global-assign","no-unsafe-negation"]